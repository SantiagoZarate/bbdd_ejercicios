---
import RigthArrowMicroIcon from '../components/icons/RigthArrowMicroIcon.astro'
import HoverableIcon from '../components/ui/HoverableIcon.astro'

interface Props {
  temas: { value: string; href: string; active: boolean }[]
  ejercicios: { value: string; href: string; active: boolean }[]
  headers?: string[]
}

const { ejercicios, temas, headers = [] } = Astro.props
---

<aside
  class='temas-aside pointer-events-none fixed left-0 hidden h-full w-full grid-cols-[1fr_805px_1fr] xl:grid'
>
  <section class='pointer-events-auto flex flex-col items-end gap-12 pr-8'>
    <article class='flex w-full flex-col'>
      <header class='pl-48'>Temas</header>
      <nav class='[&>:last-child]:border-b'>
        {
          temas.map((tema) => (
            <a
              href={tema.href}
              data-selected={tema === tema ? 'true' : 'false'}
              class={`group flex w-full items-center justify-end gap-2 rounded-r-lg py-2 pr-4 text-sm capitalize no-underline transition-colors hover:bg-secondary ${tema.active ? 'bg-accent' : 'border border-b-0 border-l-0 border-dashed border-border'}`}
            >
              {tema.value}
              <HoverableIcon>
                <RigthArrowMicroIcon />
              </HoverableIcon>
            </a>
          ))
        }
      </nav>
    </article>
    {
      ejercicios.length ? (
        <article class='flex w-full flex-col'>
          <header class='pl-48'>Ejercicios</header>
          <nav class=''>
            {ejercicios.map((ejercicio) => (
              <a
                href={ejercicio.href}
                class={`group flex w-full items-center justify-end gap-2 rounded-r-lg py-2 pr-4 text-sm capitalize no-underline transition-colors hover:bg-secondary ${ejercicio.active ? 'bg-accent' : 'border border-l-0 border-dashed border-border'}`}
              >
                {ejercicio.value}
                <HoverableIcon>
                  <RigthArrowMicroIcon />
                </HoverableIcon>
              </a>
            ))}
          </nav>
        </article>
      ) : null
    }
  </section>
  <div
    data-blurred-mask
    class='-translate-y-[10vh] backdrop-blur-sm [mask-image:linear-gradient(transparent_80%,black_90%)]'
  >
  </div>
  <section class=''>
    <ul class='pointer-events-auto flex list-none flex-col'>
      {
        headers?.map((header) => (
          <button
            data-go-to-header
            class='px-2 py-2 text-start text-xs transition hover:bg-accent'
          >
            {header}
          </button>
        ))
      }
    </ul>
  </section>
</aside>

<script>
  document.addEventListener('astro:page-load', () => {
    const $buttons = document.querySelectorAll('[data-go-to-header]')

    $buttons.forEach((button) => {
      button.addEventListener('click', () => {
        goToHeader(button.textContent!)
      })
    })

    function goToHeader(value: string) {
      const headers = document.querySelectorAll('h2')

      let clickedHeader: HTMLHeadingElement | null = null
      headers.forEach((header) => {
        if (
          header.innerText
            ?.replace(/[^a-zA-Z0-9\s.]/g, '')
            .trim()
            .toLowerCase() === value.trim().toLowerCase()
        ) {
          clickedHeader = header
        }
      })
      clickedHeader!.classList.add('header-clicked')
      clickedHeader!.addEventListener('animationend', () => {
        clickedHeader!.classList.remove('header-clicked')
      })
      const { y } = clickedHeader!.getBoundingClientRect()
      window.scroll({ top: y + window.scrollY - 140 })
    }
  })
</script>
