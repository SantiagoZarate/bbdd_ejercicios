---
import RigthArrowMicroIcon from '../components/icons/RigthArrowMicroIcon.astro'
import HoverableIcon from '../components/ui/HoverableIcon.astro'

interface Props {
  temas: { value: string; href: string }[]
  ejercicios: { value: string; href: string }[]
  headers?: string[]
  active: string
}

const { ejercicios, temas, active, headers = [] } = Astro.props
---

<aside
  class='temas-aside pointer-events-none fixed left-0 grid w-full grid-cols-[1fr_805px_1fr]'
>
  <section
    class='pointer-events-auto hidden flex-col items-end gap-12 pr-8 tablet:flex'
  >
    <article class='flex w-full flex-col'>
      <header class='pl-48'>Temas</header>
      <nav class=''>
        {
          temas.map((tema) => (
            <a
              href={tema.href}
              data-selected={tema === tema ? 'true' : 'false'}
              class={`group flex w-full items-center justify-end gap-2 rounded-r-lg py-2 pr-4 text-sm capitalize no-underline transition-colors hover:bg-secondary ${tema.value === active && 'bg-accent'}`}
            >
              {tema.value}
              <HoverableIcon>
                <RigthArrowMicroIcon />
              </HoverableIcon>
            </a>
          ))
        }
      </nav>
    </article>
    <article class='flex w-full flex-col'>
      <header class='pl-48'>Ejercicios</header>
      <nav class=''>
        {
          ejercicios.map((ejercicio) => (
            <a
              href={ejercicio.href}
              class={`group flex w-full items-center justify-end gap-2 rounded-r-lg py-2 pr-4 text-sm capitalize no-underline transition-colors hover:bg-secondary`}
            >
              {ejercicio.value}
              <HoverableIcon>
                <RigthArrowMicroIcon />
              </HoverableIcon>
            </a>
          ))
        }
      </nav>
    </article>
  </section>
  <div></div>
  <section class=''>
    <ul class='pointer-events-auto flex list-none flex-col'>
      {
        headers?.map((header) => (
          <button
            data-go-to-header
            class='px-2 py-2 text-start text-xs transition hover:bg-accent'
          >
            {header}
          </button>
        ))
      }
    </ul>
  </section>
</aside>

<script>
  document.addEventListener('astro:page-load', () => {
    const $buttons = document.querySelectorAll('[data-go-to-header]')

    $buttons.forEach((button) => {
      button.addEventListener('click', () => {
        goToHeader(button.textContent!)
      })
    })

    function goToHeader(value: string) {
      const headers = document.querySelectorAll('h2')

      let clickedHeader: HTMLHeadingElement | null = null
      headers.forEach((header) => {
        if (
          header.innerText
            ?.replace(/[^a-zA-Z0-9\s.]/g, '')
            .trim()
            .toLowerCase() === value.trim().toLowerCase()
        ) {
          clickedHeader = header
        }
      })

      const { y } = clickedHeader!.getBoundingClientRect()
      window.scroll({ top: y + window.scrollY - 100 })
    }
  })
</script>
