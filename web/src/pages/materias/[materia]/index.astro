---
import Layout from '../../../layouts/Layout.astro'
import path from 'node:path'
import { promises as fs } from 'node:fs'
import RigthArrowMicroIcon from '../../../components/icons/RigthArrowMicroIcon.astro'
import DocumentMicroIcon from '../../../components/icons/DocumentMicroIcon.astro'
import StackMicroIcon from '../../../components/icons/StackMicroIcon.astro'

export async function getStaticPaths() {
  let materias: string[] = []
  const materiasDirectory = path.resolve(`./public/materias`)
  try {
    materias = await fs.readdir(materiasDirectory)
    return materias.map((materia) => ({ params: { materia: materia } }))
  } catch (error) {
    throw new Error('There was an error')
  }
}

const { materia } = Astro.params

const temasDirectory = path.resolve(`./public/materias/${materia}`)

let temas: string[] = []
try {
  temas = await fs.readdir(temasDirectory)
} catch (error) {
  throw new Error('There was an error')
}
---

<Layout title='Materias'>
  <header>
    {materia}
  </header>
  <section>
    <header class='flex items-center gap-2'>
      <span class='border-border rounded-md border p-1'>
        <StackMicroIcon />
      </span>
      <p>Temas</p>
    </header>
    <nav class='divide-border flex flex-col divide-y'>
      {
        temas.map((tema) => (
          <a
            href={`/materias/${materia}/${tema}`}
            class='hover:bg-secondary group flex items-center gap-2 px-4 capitalize no-underline transition-colors'
          >
            {tema.replace(/-/g, ' ')}
            <span class='-translate-x-2 opacity-0 transition group-hover:translate-x-0 group-hover:opacity-100'>
              <RigthArrowMicroIcon />
            </span>
          </a>
        ))
      }
    </nav>
  </section>
  <section>
    <header class='flex items-center gap-2'>
      <span class='border-border rounded-md border p-1'>
        <DocumentMicroIcon />
      </span>
      <p>Parciales</p>
    </header>
    <nav class='divide-border flex flex-col divide-y'></nav>
  </section>
</Layout>
