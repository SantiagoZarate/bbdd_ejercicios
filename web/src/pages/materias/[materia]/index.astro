---
import DocumentMicroIcon from '@component/icons/DocumentMicroIcon.astro'
import StackMicroIcon from '@component/icons/StackMicroIcon.astro'
import BreadcrumbLink from '@component/ui/BreadcrumbLink.astro'
import List from '@component/ui/List.astro'
import ListItem from '@component/ui/ListItem.astro'
import Layout from '@layout/Layout.astro'
import { promises as fs } from 'node:fs'
import path from 'node:path'

export async function getStaticPaths() {
  let materias: string[] = []
  const materiasDirectory = path.resolve(`./public/materias`)
  try {
    materias = await fs.readdir(materiasDirectory)
    return materias.map((materia) => ({ params: { materia: materia } }))
  } catch (error) {
    throw new Error('There was an error')
  }
}

const { materia } = Astro.params

const temasDirectory = path.resolve(`./public/materias/${materia}`)

let temas: string[] = []
try {
  temas = await fs.readdir(temasDirectory)
} catch (error) {
  throw new Error('There was an error')
}
---

<Layout title='Materias'>
  <header
    class='flex divide-x divide-border [&>*:first-child]:pr-2 [&>*:last-child]:pl-2'
  >
    <BreadcrumbLink href={`/materias`} value='materias' />
    <BreadcrumbLink href={`/materias/${materia}`} value={materia} />
  </header>
  <section>
    <header class='flex items-center gap-2'>
      <span class='rounded-md border border-border p-1'>
        <StackMicroIcon />
      </span>
      <p>Temas</p>
    </header>
    <List>
      {
        temas.map((tema) => (
          <ListItem href={`/materias/${materia}/${tema}`} id={'tema-' + tema}>
            {tema.replace(/-/g, ' ')}
          </ListItem>
        ))
      }
    </List>
  </section>
  <section>
    <header class='flex items-center gap-2'>
      <span class='rounded-md border border-border p-1'>
        <DocumentMicroIcon />
      </span>
      <p>Parciales</p>
    </header>
    <nav class='flex flex-col divide-y divide-border'></nav>
  </section>
</Layout>
